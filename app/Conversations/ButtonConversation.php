<?php

namespace App\Conversations;

use App\Services\Mailer\MailService;
use BotMan\BotMan\Messages\Conversations\Conversation;
use BotMan\BotMan\Messages\Outgoing\Question;
use BotMan\BotMan\Messages\Outgoing\Actions\Button;
use BotMan\BotMan\Messages\Attachments\Contact;
use BotMan\Drivers\Telegram\Extensions\Keyboard;
use BotMan\Drivers\Telegram\Extensions\KeyboardButton;
use BotMan\BotMan\Messages\Incoming\Answer;
use Illuminate\Support\Facades\Hash;


const keyboard = [
    '–é–∑–±–µ–∫–∏—Å—Ç–æ–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∞—Å–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –≤–∞–∑–∏—Ä–ª–∏–≥–∏',
    '“ö–æ—Ä–∞“õ–∞–ª–ø–æ“ì–∏—Å—Ç–æ–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∞—Å–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –≤–∞–∑–∏—Ä–ª–∏–≥–∏',
    '–ê–Ω–¥–∏–∂–æ–Ω –≤–∏–ª–æ—è—Ç–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –±–æ—à“õ–∞—Ä–º–∞—Å–∏',
    '–§–∞—Ä“ì–æ–Ω–∞ –≤–∏–ª–æ—è—Ç–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –±–æ—à“õ–∞—Ä–º–∞—Å–∏',
    '–ñ–∏–∑–∑–∞—Ö –≤–∏–ª–æ—è—Ç–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –±–æ—à“õ–∞—Ä–º–∞—Å–∏',
    '–•–æ—Ä–∞–∑–º –≤–∏–ª–æ—è—Ç–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –±–æ—à“õ–∞—Ä–º–∞—Å–∏',
    '–ù–∞–º–∞–Ω–≥–∞–Ω –≤–∏–ª–æ—è—Ç–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –±–æ—à“õ–∞—Ä–º–∞—Å–∏',
    '–ù–∞–≤–æ–∏–π –≤–∏–ª–æ—è—Ç–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –±–æ—à“õ–∞—Ä–º–∞—Å–∏',
    '“ö–∞—à“õ–∞–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –±–æ—à“õ–∞—Ä–º–∞—Å–∏',
    '–°–∞–º–∞—Ä“õ–∞–Ω–¥ –≤–∏–ª–æ—è—Ç–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –±–æ—à“õ–∞—Ä–º–∞—Å–∏',
    '–°–∏—Ä–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –±–æ—à“õ–∞—Ä–º–∞—Å–∏',
    '–°—É—Ä—Ö–æ–Ω–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –±–æ—à“õ–∞—Ä–º–∞—Å–∏',
    '–¢–æ—à–∫–µ–Ω—Ç –≤–∏–ª–æ—è—Ç–∏ “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –±–æ—à“õ–∞—Ä–º–∞—Å–∏',
    '"–é–∑–¥–∞–≤–µ—Ä–ª–æ–π–∏“≥–∞" –∏–ª–º–∏–π-–ª–æ–π–∏“≥–∞–ª–∞—à –∏–Ω—Å—Ç–∏—Ç—É—Ç–∏',
    '"–ê–∫–∞–¥–µ–º–∏–∫ –ú.–ú–∏—Ä–∑–∞–µ–≤ –Ω–æ–º–∏–¥–∞–≥–∏ –±–æ“ì–¥–æ—Ä—á–∏–ª–∏–∫, —É–∑—É–º—á–∏–ª–∏–∫
            –≤–∞ –≤–∏–Ω–æ—á–∏–ª–∏–∫ –∏–ª–º–∏–π-—Ç–∞–¥“õ–∏“õ–æ—Ç –∏–Ω—Å—Ç–∏—Ç—É—Ç–∏"',
    '–ë–æ“ì–¥–æ—Ä—á–∏–ª–∏–∫ –≤–∞ –∏—Å—Å–∏“õ—Ö–æ–Ω–∞ —Ö—û–∂–∞–ª–∏–≥–∏–Ω–∏ —Ä–∏–≤–æ–∂–ª–∞–Ω—Ç–∏—Ä–∏—à –∞–≥–µ–Ω—Ç–ª–∏–≥–∏',
    '“ö–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏–¥–∞ –±–∏–ª–∏–º –≤–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏—è–ª–∞—Ä –º–∏–ª–ª–∏–π –º–∞—Ä–∫–∞–∑–∏',
    '–£—Ä—É“ì—á–∏–ª–∏–∫–Ω–∏ —Ä–∏–≤–æ–∂–ª–∞–Ω—Ç–∏—Ä–∏—à –º–∞—Ä–∫–∞–∑–∏',
    '“ö–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ —ç–∫–∏–Ω–ª–∞—Ä–∏ –Ω–∞–≤–ª–∞—Ä–∏–Ω–∏ —Å–∏–Ω–∞—à –º–∞—Ä–∫–∞–∑–∏',
    '–¢—É–ø—Ä–æ“õ —Ç–∞—Ä–∫–∏–±–∏ –≤–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π—Å–∏, —Å–∏—Ñ–∞—Ç–∏ —Ç–∞“≥–ª–∏–ª –º–∞—Ä–∫–∞–∑–∏',
    '“ö–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ —Ç–µ—Ö–Ω–∏–∫–∞—Å–∏ –≤–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä–∏–Ω–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–ª–∞—à –≤–∞ —Å–∏–Ω–∞—à –¥–∞–≤–ª–∞—Ç –º–∞—Ä–∫–∞–∑–∏',
    '“ö–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏–Ω–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–ª–∞—à—Ç–∏—Ä–∏—à –º–∞—Ä–∫–∞–∑–∏',
    '–ö–∏–º—ë–ª–∞—à—Ç–∏—Ä–∏—à –≤–∞ —û—Å–∏–º–ª–∏–∫–ª–∞—Ä–Ω–∏ “≥–∏–º–æ—è “õ–∏–ª–∏—à –≤–æ—Å–∏—Ç–∞–ª–∞—Ä–∏–Ω–∏ —Å–∏–Ω–æ–≤–¥–∞–Ω —û—Ç–∫–∞–∑–∏—à –≤–∞ —Ä—û–π—Ö–∞—Ç–≥–∞ –æ–ª–∏—à –±—û–π–∏—á–∞ –¥–∞–≤–ª–∞—Ç –∫–æ–º–∏—Å—Å–∏—è—Å–∏ –ò—à—á–∏ –æ—Ä–≥–∞–Ω–∏',
    '–¢–æ—à–∫–µ–Ω—Ç –¥–∞–≤–ª–∞—Ç –∞–≥—Ä–∞—Ä —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∏',
    '–ê–Ω–¥–∏–∂–æ–Ω “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –≤–∞ –∞–≥—Ä–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä –∏–Ω—Å—Ç–∏—Ç—É—Ç–∏',
    '–ú–∞—ä–º—É—Ä–∏–π-—Ö—û–∂–∞–ª–∏–∫ —Ö–∏–∑–º–∞—Ç–∏ –º—É–∞—Å—Å–∞—Å–∞—Å–∏',
    '–ê–≥—Ä–æ—Å–∞–Ω–æ–∞—Ç–Ω–∏ —Ä–∞“õ–∞–º–ª–∞—à—Ç–∏—Ä–∏—à –º–∞—Ä–∫–∞–∑–∏',
];
const QUESTIONS = [
    'ASK_NAME' => ['uz' => 'Ismingizni ?','ru' => 'Ismingizni ? Ru'],
    'ASK_PHONE' => ['uz' => 'Telefon raqamingiz?', 'ru'=>'Telefon raqamingiz?'],
    'ASK_EMAIL' => ['uz' => 'Email?', 'ru'=>'Email Ru?'],
    'ASK_ACTION' => ['uz' => '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!', 'ru'=>'–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ! Ru'],
    'ASK_REGION' => ['uz' => '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω!', 'ru'=>'–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω! Ru'],
    'ASK_ROUTE' => ['uz' => '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ —Å—Ñ–µ—Ä—É!', 'ru'=>'–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ —Å—Ñ–µ—Ä—É! Ru'],

    'TELL_PHONE_SEND' => ['uz' => '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä', 'ru'=>'–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä Ru'],
];
const KEY_ACTIONS = [
    '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å',
    '–û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ',
    '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
];
const KEY_REGIONS = [
    '–ê–Ω–¥–∏–∂–æ–Ω –≤–∏–ª–æ—è—Ç–∏',
    '–ë—É—Ö–æ—Ä–æ –≤–∏–ª–æ—è—Ç–∏',
    '–ñ–∏–∑–∑–∞—Ö –≤–∏–ª–æ—è—Ç–∏',
    '“ö–∞—à“õ–∞–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏',
    '“ö–æ—Ä–∞“õ–∞–ª–ø–æ“ì–∏—Å—Ç–æ–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∞—Å–∏',
    '–ù–∞–≤–æ–∏–π –≤–∏–ª–æ—è—Ç–∏',
    '–ù–∞–º–∞–Ω–≥–∞–Ω –≤–∏–ª–æ—è—Ç–∏',
    '–°–∞–º–∞—Ä“õ–∞–Ω–¥ –≤–∏–ª–æ—è—Ç–∏',
    '–°–∏—Ä–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏',
    '–°—É—Ä—Ö–æ–Ω–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏',
    '–¢–æ—à–∫–µ–Ω—Ç –≤–∏–ª–æ—è—Ç–∏',
    '–§–∞—Ä–≥–æ–Ω–∞ –≤–∏–ª–æ—è—Ç–∏',
    '–•–æ—Ä–∞–∑–º –≤–∏–ª–æ—è—Ç–∏',
];
const KEY_ROUTES = [
        '–¶–µ–Ω—Ç—Ä –∞–≥—Ä–æ–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏',
        '–£—á—Ä–µ–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ-—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è',
        '–ê–Ω–¥–∏–∂–∞–Ω—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞ –∏ –∞–≥—Ä–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
        '–¢–∞—à–∫–µ–Ω—Ç—Å–∫–∏–π –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –ê–≥—Ä–∞—Ä–Ω—ã–π –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç',
        '–†–∞–±–æ—á–∏–π –æ—Ä–≥–∞–Ω –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ –ø–æ –∏—Å–ø—ã—Ç–∞–Ω–∏—è–º –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö –≤–µ—â–µ—Å—Ç–≤ –∏ —Å—Ä–µ–¥—Å—Ç–≤ –∑–∞—â–∏—Ç—ã —Ä–∞—Å—Ç–µ–Ω–∏–π',
        '–¶–µ–Ω—Ç—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏–∏ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞',
        '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –∏—Å–ø—ã—Ç–∞–Ω–∏–π —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
        '–°–æ—Å—Ç–∞–≤ –∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ—á–≤, —Ü–µ–Ω—Ç—Ä –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞',
        '–¶–µ–Ω—Ç—Ä –∏—Å–ø—ã—Ç–∞–Ω–∏–π —Å–æ—Ä—Ç–æ–≤ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä',
        '–¶–µ–Ω—Ç—Ä —Ä–∞–∑–≤–∏—Ç–∏—è —Å–µ–º—è–Ω',
        '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä –∑–Ω–∞–Ω–∏–π –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π –≤ —Å–µ–ª—å—Å–∫–æ–º —Ö–æ–∑—è–π—Å—Ç–≤–µ',
        '–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–∞–¥–æ–≤–æ–¥—Å—Ç–≤–∞ –∏ —Ç–µ–ø–ª–∏—Ü',
        '–°–∞–¥–æ–≤–æ–¥—Å—Ç–≤–æ –∏ –≤–∏–Ω–æ–≥—Ä–∞–¥–∞—Ä—Å—Ç–≤–æ –∏–º–µ–Ω–∏ –∞–∫–∞–¥–µ–º–∏–∫–∞ –ú. –ú–∏—Ä–∑–∞–µ–≤–∞. –∏ –≤–∏–Ω–æ–¥–µ–ª—å—á–µ—Å–∫–∏–π –Ω–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç',
        '–£–∑–¥–∞–≤–µ—Ä–ª–æ–π–∏—Ö–∞ –ù–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏ –ø—Ä–æ–µ–∫—Ç–Ω—ã–π –∏–Ω—Å—Ç–∏—Ç—É—Ç',
        '–¢–∞—à–∫–µ–Ω—Ç—Å–∫–æ–µ –æ–±–ª–∞—Å—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞',
        '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞ –°—É—Ä—Ö–∞–Ω–¥–∞—Ä—å–∏–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏',
        '–°—ã—Ä–¥–∞—Ä—å–∏–Ω—Å–∫–æ–µ –æ–±–ª–∞—Å—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞',
        '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞ –°–∞–º–∞—Ä–∫–∞–Ω–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏',
        '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞ –ö–∞—à–∫–∞–¥–∞—Ä—å–∏–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏',
        '–ù–∞–≤–æ–∏–π—Å–∫–æ–µ –æ–±–ª–∞—Å—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞',
        '–ù–∞–º–∞–Ω–≥–∞–Ω—Å–∫–æ–µ –æ–±–ª–∞—Å—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞',
        '–•–æ—Ä–µ–∑–º—Å–∫–æ–µ –æ–±–ª–∞—Å—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞',
        '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞ –î–∂–∏–∑–∞–∫—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏',
        '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞ –§–µ—Ä–≥–∞–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏',
        '–ê–Ω–¥–∏–∂–∞–Ω—Å–∫–æ–µ –æ–±–ª–∞—Å—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞',
        '–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω',
        '–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å—Ç–∞–Ω',
    ];



    const keyboarddd = [
        '–û–∑–∏“õ-–æ–≤“õ–∞—Ç —Ö–∞–≤—Å–∏–∑–ª–∏–≥–∏ –±—û–π–∏—á–∞',
        '–ê–≥—Ä–æ—Ç–µ—Ö–Ω–∏–∫ —Ç–∞–¥–±–∏—Ä–ª–∞—Ä–Ω–∏ —û–∑ –≤–∞“õ—Ç–∏–¥–∞ —û—Ç–∫–∞–∑–º–∞—Å–ª–∏–∫ –±—û–π–∏—á–∞',
        '–ú–∏–Ω–µ—Ä–∞–ª –≤–∞ –æ—Ä–≥–∞–Ω–∏–∫ —û“ì–∏—Ç–ª–∞—Ä–¥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω–∏—à –±—û–π–∏—á–∞',
        '“ö–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏–≥–∞ –º—û–ª–∂–∞–ª–ª–∞–Ω–≥–∞–Ω –µ—Ä–ª–∞—Ä–¥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω–∏—à –±—û–π–∏—á–∞',
        '–ú–µ—Ö–Ω–∞—Ç –∏–Ω—Ç–∏–∑–æ–º–∏ –±—û–π–∏—á–∞',
        '–ú–æ–ª–∏—è-“≥—û–∂–∞–ª–∏–∫ —Ñ–∞–æ–ª–∏—è—Ç–∏ –±—û–π–∏—á–∞',
        '–î–∞–≤–ª–∞—Ç —Ö–∞—Ä–∏–¥–ª–∞—Ä–∏ –±—û–π–∏—á–∞ (—Ç–æ–≤–∞—Ä–ª–∞—Ä, –∏—à–ª–∞—Ä –≤–∞ —Ö–∏–∑–º–∞—Ç–ª–∞—Ä–Ω–∏ —Ö–∞—Ä–∏–¥ “õ–∏–ª–∏—à)',
        '–ú—É—Ä–æ–∂–∞—Ç–ª–∞—Ä–Ω–∏ –∫—û—Ä–∏–± —á–∏“õ–∏—à –≤–∞ –∏–∂—Ä–æ –∏–Ω—Ç–∏–∑–æ–º–∏ –±—û–π–∏—á–∞',
        '–ë–æ—à–∫–∞ –π—É–Ω–∞–ª–∏—à–ª–∞—Ä–¥–∞',
    ];
const keyboardddRu = [
        '–û –ø—Ä–æ–¥–æ–≤–æ–ª—å—Å—Ç–≤–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
       '–û –Ω–µ—Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞–≥—Ä–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
        '–û–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –º–∏–Ω–µ—Ä–∞–ª—å–Ω—ã—Ö –∏ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö —É–¥–æ–±—Ä–µ–Ω–∏–π',
        '–û–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∑–µ–º–µ–ª—å —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è',
        '–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ –∫–æ–∫—Ç–µ–π–ª–µ–π',
        '–û —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ-—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
         '–û –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–∫—É–ø–∫–∞—Ö (–∑–∞–∫—É–ø–∫–∞—Ö —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–±–æ—Ç, —É—Å–ª—É–≥)',
        '–û –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏',
        '–í –¥—Ä—É–≥–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö',
    ];
const msgUz = 'üó£ –•—É—Ä–º–∞—Ç–ª–∏ —Ñ—É“õ–æ—Ä–æ–ª–∞—Ä “ö–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –≤–∞–∑–∏—Ä–ª–∏–≥–∏ —Ç–∏–∑–∏–º–∏–¥–∞ –∫–æ—Ä—Ä—É–ø—Ü–∏—è–≥–∞ –¥—É—á –∫–µ–ª—Å–∞–Ω–≥–∏–∑, –±–∏–∑–≥–∞ —Ö–∞–±–∞—Ä –±–µ—Ä–∏–Ω–≥.
        ü§≥“ö–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –≤–∞–∑–∏—Ä–ª–∏–≥–∏ —Ç–∏–∑–∏–º–∏–¥–∞–≥–∏, –∂—É–º–ª–∞–¥–∞–Ω, “õ–∏—à–ª–æ“õ —Ö—û–∂–∞–ª–∏–≥–∏ –±–æ—à“õ–∞—Ä–º–∞–ª–∞—Ä–∏ –≤–∞ –±—û–ª–∏–º–ª–∞—Ä–∏,–≤–∞–∑–∏—Ä–ª–∏–∫ —Ç–∏–∑–∏–º–∏–¥–∞–≥–∏ –∫–æ—Ä—Ö–æ–Ω–∞–ª–∞—Ä, —Ç–∞—à–∫–∏–ª–æ—Ç–ª–∞—Ä –≤–∞ —Ç–∞—ä–ª–∏–º –º—É–∞—Å—Å–∞—Å–∞–ª–∞—Ä–∏–¥–∞–≥–∏ –∫–æ—Ä—Ä—É–ø—Ü–∏—è “≥–æ–ª–∞—Ç–ª–∞—Ä–∏ “≥–∞“õ–∏–¥–∞ –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–Ω–∏ —Ç–µ–ª–µ–≥—Ä–∞–º–¥–∞–≥–∏ @UzAgroAnticorruptionBot –±–æ—Ç–∏–≥–∞ –≤–∞  +998 71 206-70-65 –≤–∞–∑–∏—Ä–ª–∏–∫–Ω–∏–Ω–≥ –∏—à–æ–Ω—á —Ç–µ–ª–µ—Ñ–æ–Ω–∏–≥–∞ —Ö–∞–±–∞—Ä “õ–∏–ª–∏—à –æ—Ä“õ–∞–ª–∏ —é–±–æ—Ä–∏—à–∏–Ω–≥–∏–∑ –º—É–º–∫–∏–Ω.
        ‚ÄºÔ∏è–Æ–±–æ—Ä–∏–ª–≥–∞–Ω —Ö–∞–±–∞—Ä–ª–∞—Ä –±–µ–ª–≥–∏–ª–∞–Ω–≥–∞–Ω —Ç–∞—Ä—Ç–∏–±–¥–∞ –∫—û—Ä–∏–± —á–∏“õ–∏–ª–∞–¥–∏ “≥–∞–º–¥–∞ –º—É—Ä–æ–∂–∞–∞—Ç “õ–∏–ª—É–≤—á–∏–Ω–∏–Ω–≥ —à–∞—Ö—Å–∏ —Å–∏—Ä —Å–∞“õ–ª–∞–Ω–∏—à–∏ –∫–∞—Ñ–æ–ª–∞—Ç–ª–∞–Ω–∞–¥–∏.';
const msgRu = 'üó£ –£–≤–∞–∂–∞–µ–º—ã–µ –≥—Ä–∞–∂–¥–∞–Ω–µ! –ï—Å–ª–∏ –≤—ã —Å—Ç–æ–ª–∫–Ω–µ—Ç–µ—Å—å —Å –∫–æ—Ä—Ä—É–ø—Ü–∏–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ –ú–∏–Ω—Å–µ–ª—å—Ö–æ–∑–∞, —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –æ–± —ç—Ç–æ–º.
        ü§≥ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ä—Ä—É–ø—Ü–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ –ú–∏–Ω—Å–µ–ª—å—Ö–æ–∑–∞, –≤ —Ç–æ–º —á–∏—Å–ª–µ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤–µ–¥–æ–º—Å—Ç–≤–∞—Ö –∏ –æ—Ç–¥–µ–ª–∞—Ö, –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è—Ö, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö –∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏—è—Ö –≤ —Å–∏—Å—Ç–µ–º–µ –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞, –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ—Ç—É @UzAgroAnticorruptionBot –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ –∏ –Ω–∞ –≥–æ—Ä—è—á—É—é –ª–∏–Ω–∏—é –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ +998 71 206-70-65.
        ‚Äº Ô∏è–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω—ã –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∑–∞—è–≤–∏—Ç–µ–ª—è –±—É–¥–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞.';


const keyboardRu = [
        '–ê–Ω–¥–∏–∂–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        '–ë—É—Ö–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        '–î–∂–∏–∑–∞–∫—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        '–ö–∞—à–∫–∞–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å—Ç–∞–Ω',
        '–ù–∞–≤–æ–∏–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        '–ù–∞–º–∞–Ω–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        '–°–∞–º–∞—Ä–∫–∞–Ω–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        '–°—ã—Ä–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        '–°—É—Ä—Ö–∞–Ω–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        '–¢–∞—à–∫–µ–Ω—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        '–§–µ—Ä–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        '–•–æ—Ä–µ–∑–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
    ];
class ButtonConversation extends Conversation
{

    public function ContactKeyboard()
    {
        return Keyboard::create()
            ->addRow(KeyboardButton::create(QUESTIONS["TELL_PHONE_SEND"]["uz"])->requestContact())
            ->type(Keyboard::TYPE_KEYBOARD)
            ->oneTimeKeyboard()
            ->resizeKeyboard()
            ->toArray();
    }
    public function keyActions(){
        $ar = [];
        foreach (KEY_ACTIONS as $key) {
            array_push($ar,Button::create($key)->value($key));
        }
        return Question::create(QUESTIONS["ASK_ACTION"]["uz"])
        ->addButtons($ar);
    }
    public function keyRegions(){
        $ar = [];
        foreach (KEY_REGIONS as $key) {
            array_push($ar,Button::create($key)->value($key));
        }
        return Question::create(QUESTIONS["ASK_REGION"]["uz"])
        ->addButtons($ar);
    }
    public function keyRoutes(){
        $ar = [];
        foreach (KEY_ROUTES as $key) {
            array_push($ar,Button::create($key)->value($key));
        }
        return Question::create(QUESTIONS["ASK_REGION"]["uz"])
        ->addButtons($ar);
    }
    public function run()
    {
        // $this->askUser();
        $question = Question::create('tilni tanlang!')
        ->addButtons([
            Button::create('uzbek')->value('uz'),
            Button::create('—Ä—É—Å—Å–∫–∏–π')->value('ru'),
        ]);
        $this->ask(QUESTIONS["ASK_NAME"]["uz"], function($name){
            $this->ask(QUESTIONS["ASK_PHONE"]["uz"], function($phone){

            //     $this->askForContact('PHONE', function(Contact $contact){

            //         $this->say("Your phone number is ".$contact->getPhoneNumber());
            //     },
            //     null,
            //     $this->ContactKeyboard()
            // );
                $this->ask(QUESTIONS["ASK_EMAIL"]["uz"], function($email){
                    $this->say("Ok" . $email->getText());
                    // $pstext = str_random(8);
                    // $hashed_random_password = Hash::make($pstext);
                    // $mailer = new MailService();
                    // $mailer->sendMail($email->getText(), 'Asadbek',"OK");

                    $this->ask($this->keyActions(), function($actions){
                        if ($actions->isInteractiveMessageReply()) {
                            $this->say("You selected ".$actions->getValue());
                        } else $this->repeat();
                    });
                });
            });

            }
        );
        // $this->ask($question, function($answer){
            // if ($answer->isInteractiveMessageReply()) {
            //     if($answer->getValue() == 'uz') {
            //         $this->say(msgUz);
            //         $questionn = Question::create('–ë—û–ª–∏–º–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥!')
            //             ->addButtons([
            //                 Button::create('–í–∏–ª–æ—è—Ç–ª–∞—Ä')->value('regions'),
            //                 Button::create('–¢—É–∑–∏–ª–º–∞–ª–∞—Ä')->value('structs'),
            //             ]);
            //         $this->ask($questionn,function ($answerr) {
            //             if ($answerr->isInteractiveMessageReply()) {
            //                 if($answerr->getValue() == 'regions') {
            //                     $ar = [];

            //                     foreach (keyboardd as $key) {
            //                         array_push($ar,Button::create($key)->value($key));
            //                     }
            //                     $questionn = Question::create('–ö–µ—Ä–∞–∫–ª–∏ –≤–∏–ª–æ—è—Ç —Ç–∞–Ω–ª–∞–Ω–≥!')
            //                         ->addButtons($ar);
            //                     $this->ask($questionn,function ($answerr) {
            //                         if ($answerr->isInteractiveMessageReply()) {
            //                             $ar = [];

            //                             foreach (keyboarddd as $key) {
            //                                 array_push($ar,Button::create($key)->value($key));
            //                             }
            //                             $questionn = Question::create('–ö–µ—Ä–∞–∫–ª–∏ –π—û–Ω–∞–ª–∏—à–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥!')
            //                                 ->addButtons($ar);

            //                             $this->ask($questionn,function ($answer){
            //                                 if ($answer->isInteractiveMessageReply()) {
            //                                     $questionn = Question::create('–°–∏–∑–¥–∞ —É—à–±—É –π—û–Ω–∞–ª–∏—à–≥–∞ –æ–∏–¥ “õ–∞–Ω–¥–∞–π–¥–∏—Ä –º–∞—ä–ª—É–º–æ—Ç (–≤–∏–¥–µ–æ/–∞—É–¥–∏–æ/—Ñ–æ—Ç–æ/–≤.—Ö.) –±—û–ª—Å–∞, –∏–ª–æ–≤–∞ “õ–∏–ª–≥–∞–Ω “≥–æ–ª–¥–∞ –±–∏–∑–≥–∞ —é–±–æ—Ä–∏—à–∏–Ω–≥–∏–∑ –º—É–º–∫–∏–Ω!')

            //                                         ->addButtons([Button::create('')->value('fd')]);

            //                                     $this->ask($questionn,function ($answer){
            //                                         $this->say('‚úÖ–Æ–±–æ—Ä–≥–∞–Ω —Ö–∞–±–∞—Ä–∏–Ω–≥–∏–∑ –±–µ–ª–≥–∏–ª–∞–Ω–≥–∞–Ω —Ç–∞—Ä—Ç–∏–±–¥–∞ –∫—û—Ä–∏–± —á–∏“õ–∏–ª–∞–¥–∏. –ú–∞—ä–ª—É–º–æ—Ç —É—á—É–Ω —Ä–∞—Ö–º–∞—Ç!');
            //                                         $this->say('‚úÖboshlashj uchun /start ni yuboring');
            //                                     });
            //                                 }else {
            //                                     $this->repeat();
            //                                 }


            //                             });

            //                         }else {
            //                             $this->repeat();
            //                         }


            //                     });

            //                 }
            //                 elseif ($answerr->getValue() == 'structs') {
            //                     $ar = [];

            //                     foreach (keyboard as $key) {
            //                         array_push($ar,Button::create($key)->value($key));
            //                     }
            //                     $questionn = Question::create('–ö–µ—Ä–∞–∫–ª–∏ —Ç—É–∑–∏–ª–º–∞–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥!')
            //                         ->addButtons($ar);
            //                     $this->ask($questionn,function ($answer) {
            //                         if ($answer->isInteractiveMessageReply()) {
            //                             $questionn = Question::create('–°–∏–∑–¥–∞ —É—à–±—É –π—û–Ω–∞–ª–∏—à–≥–∞ –æ–∏–¥ “õ–∞–Ω–¥–∞–π–¥–∏—Ä –º–∞—ä–ª—É–º–æ—Ç (–≤–∏–¥–µ–æ/–∞—É–¥–∏–æ/—Ñ–æ—Ç–æ/–≤.—Ö.) –±—û–ª—Å–∞, –∏–ª–æ–≤–∞ “õ–∏–ª–≥–∞–Ω “≥–æ–ª–¥–∞ –±–∏–∑–≥–∞ —é–±–æ—Ä–∏—à–∏–Ω–≥–∏–∑ –º—É–º–∫–∏–Ω!')->addButton(Button::create('')->value('fd'));
            //                             $this->ask($questionn,function ($answer){
            //                                 $this->say('‚úÖ–Æ–±–æ—Ä–≥–∞–Ω —Ö–∞–±–∞—Ä–∏–Ω–≥–∏–∑ –±–µ–ª–≥–∏–ª–∞–Ω–≥–∞–Ω —Ç–∞—Ä—Ç–∏–±–¥–∞ –∫—û—Ä–∏–± —á–∏“õ–∏–ª–∞–¥–∏. –ú–∞—ä–ª—É–º–æ—Ç —É—á—É–Ω —Ä–∞—Ö–º–∞—Ç!');
            //                                 $this->say('‚úÖboshlashj uchun /start ni yuboring');
            //                             });
            //                         }else {
            //                             $this->repeat();
            //                         }


            //                     });
            //                 }
            //             }else {
            //                 $this->repeat();
            //             }

            //         });
            //     }
            //     elseif ($answer->getValue() == 'ru') {

            //         $this->say(msgRu);
            //         $questionn = Question::create('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª!')
            //             ->addButtons([
            //                 Button::create('–ü—Ä–æ–≤–∏–Ω—Ü–∏–∏')->value('vi'),
            //                 Button::create('–°—Ç—Ä—É–∫—Ç—É—Ä—ã')->value('tu'),
            //             ]);
            //         $this->ask($questionn,function ($answerr) {
            //             if($answerr->isInteractiveMessageReply()) {
            //                 if($answerr->getValue() == 'vi') {
            //                     $ar = [];

            //                     foreach (keyboardRu as $key) {
            //                         array_push($ar,Button::create($key)->value($key));
            //                     }
            //                     $questionn = Question::create('–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Ä–µ–≥–∏–æ–Ω!')
            //                         ->addButtons($ar);
            //                     $this->ask($questionn,function ($answerr) {
            //                         if ($answerr->isInteractiveMessageReply()) {
            //                             $ar = [];

            //                             foreach (keyboardddRu as $key) {
            //                                 array_push($ar,Button::create($key)->value($key));
            //                             }
            //                             $questionn = Question::create('–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ!')
            //                                 ->addButtons($ar);

            //                             $this->ask($questionn,function ($answer){
            //                                 if ($answer->isInteractiveMessageReply()) {
            //                                     $questionn = Question::create('–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∞—è-–ª–∏–±–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç—Ç–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é (–≤–∏–¥–µ–æ / –∞—É–¥–∏–æ / —Ñ–æ—Ç–æ / –∏ —Ç. –î.), –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å –µ–µ –Ω–∞–º —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º.!')

            //                                         ->addButtons([Button::create('')->value('fd')]);

            //                                     $this->ask($questionn,function ($answer){
            //                                         $this->say('‚úÖ–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!');
            //                                         $this->say('‚úÖ–û—Ç–ø—Ä–∞–≤–∏—Ç—å /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å');
            //                                     });
            //                                 } else {
            //                                     $this->repeat();
            //                                 }

            //                             });
            //                         } else {
            //                             $this->repeat();
            //                         }

            //                     });

            //                 }
            //                 elseif ($answerr->getValue() == 'tu') {

            //                     $ar = [];

            //                     foreach (keyboarddRu as $key) {
            //                         array_push($ar,Button::create($key)->value($key));
            //                     }
            //                     $questionn = Question::create('–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É!')
            //                         ->addButtons($ar);
            //                     $this->ask($questionn,function ($answer) {
            //                         if ($answer->isInteractiveMessageReply()) {
            //                             $questionn = Question::create('–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∞—è-–ª–∏–±–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç—Ç–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é (–≤–∏–¥–µ–æ / –∞—É–¥–∏–æ / —Ñ–æ—Ç–æ / –∏ —Ç. –î.), –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å –µ–µ –Ω–∞–º —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º!')->addButton(Button::create('')->value('fd'));
            //                             $this->ask($questionn,function ($answer){
            //                                 $this->say('‚úÖ–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!. ');
            //                                 $this->say('‚úÖ–û—Ç–ø—Ä–∞–≤–∏—Ç—å /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å');
            //                             });
            //                         }else {
            //                             $this->repeat();
            //                         }

            //                     });
            //                 }
            //             }else {
            //                 $this->repeat();
            //             }

            //         });

            //     }
            // }else {
            //     $this->repeat();
            // }


        // });
    }
    public function askUser(){

        $this->ask('Salom', function(Answer $answer){
                $this->say('Your name is a', $answer->getValue());

            }
        );
    }
}
